課題
ステップ０　お金の投入と払い戻し

0-1.10円玉、50円玉、100円玉、500円玉、1000円札を１つずつ投入できる。
 MONEY = [10, 50, 100, 500, 1000].freeze #31

0-2.投入は複数回できる。
def slot_money(money)# 16

0-3.投入金額の総計を取得できる。
def current_slot_money #12

0-4.払い戻し操作を行うと、投入金額の総計を釣り銭として出力する。
  def return_money #　27

ステップ１　扱えないお金
1-1.想定外のもの（硬貨：１円玉、５円玉。お札：千円札以外のお札）が投入された場合は、投入金額に加算せず、それをそのまま釣り銭としてユーザに出力する。
def slot_money(money) #16


ステップ２　ジュースの管理
2-1.値段と名前の属性からなるジュースを１種類格納できる。初期状態で、コーラ（値段:120円、名前”コーラ”）を5本格納している。
class Item
2-2.格納されているジュースの情報（値段と名前と在庫）を取得できる。
class Stocks


ステップ３　購入

3-1.投入金額、在庫の点で、コーラが購入できるかどうかを取得できる。
  def can_purchase_list #32
3-2.ジュース値段以上の投入金額が投入されている条件下で購入操作を行うと、ジュースの在庫を減らし、売り上げ金額を増やす。
  def purchase(x) #43
3-3.投入金額が足りない場合もしくは在庫がない場合、購入操作を行っても何もしない。
  def purchase(x) #43
3-4.現在の売上金額を取得できる。
  def current_proceeds #54
3-5.払い戻し操作では現在の投入金額からジュース購入金額を引いた釣り銭を出力する。
  def purchase(x) #44

ステップ４　機能拡張
4-1.ジュースを3種類管理できるようにする。
class Item #72
4-2.在庫にレッドブル（値段:200円、名前”レッドブル”）5本を追加する。
class Item #72
4-3.在庫に水（値段:100円、名前”水”）5本を追加する。
class Item #72
4-4.投入金額、在庫の点で購入可能なドリンクのリストを取得できる。
  def can_purchase_list #32

ステップ５　釣り銭と売り上げ管理
5-1.ジュース値段以上の投入金額が投入されている条件下で購入操作を行うと、釣り銭（投入金額とジュース値段の差分）を出力する。
  def purchase(x) #43
5-2.ジュースと投入金額が同じ場合、つまり、釣り銭0円の場合も、釣り銭0円と出力する。
   def purchase(x) #43
5-3.釣り銭の硬貨の種類は考慮しなくてよい。
   コード自体が考慮されていない。つまり、そのままでヨシ！
